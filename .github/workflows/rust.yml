name: Rust Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      valkey:
        image: valkey/valkey:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="valkey-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      REDIS_URL: redis://localhost:6379
    steps:
      - uses: actions/checkout@v4

      - name: Update DATABASE_URL in .env
        run: |
          if [ -f .env ]; then
            sed -i 's|^DATABASE_URL=.*$|DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_db|' .env
          else
            echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_db" >> .env
          fi

      - name: Cache cargo bin (sqlx-cli)
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-sqlx-cli

      - name: Install sqlx-cli
        run: |
          if ! command -v sqlx &> /dev/null; then
            cargo install sqlx-cli --no-default-features --features postgres
          fi

      - name: Wait for Postgres
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -U postgres && break
            sleep 2
          done

      - name: Run sqlx migrations
        run: sqlx migrate run
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Build binaries (release)
        run: cargo build --release

      - name: Run tests (release)
        run: cargo test --release

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
